/*13. За правилами милозвучності української мови, не можна, щоб між приголосними буквами був прийменник 'в' (його слід замінити на 'у'),
а між голосними — щоб був прийменник 'у' (його слід замінити на 'в'). Напишіть відповідне перетворення (користувач вводить рядок тексту,
програма виводить текст, в якому виправлено цю (й лише цю) помилку). (Наведене в умові цієї задачі не в усіх деталях відповідає
чинному правопису; тим не менш, зробіть, як просять в умові цієї задачі (кінець кінцем, сказано виправити лише цю помилку). На стандартні бали,
вважайте, що між кінцем попереднього слова та прийменником (а також між прийменником та початком наступного слова) рівно по одному
пробілу, інші варіанти просто проігноруйте. 
(Якщо вже зробили й захистили усно спосіб, вказаний у попередньому реченні, то можете захистити усно на додаткові бали також спосіб,
де враховано ще якісь корисні особливості). Рекомендується написати власні функції (методи) IsUkrVowel (чи є голосною буквою) 
та IsUkrConsonant (чи є приголосною буквою), які міститимуть дуже довгі вирази типу bool, просто перелічуючи потрібні букви. 
(Якщо раптом знайдете спосіб, як не писати самостійно, а використати якусь бібліотечну таку перевірку — теж можна, якщо, звісно, вона працюватиме.) 
Також зверніть увагу, що конкретно з українськими буквами «і» та «ґ» ситуація трохи особлива, бо в деяких таблицях
кодування (codepages) їх нема, через що вони можуть відображатися знаком питання. Не надто цим переймайтеся (це не вважатиметься помилкою),
а також зверніть увагу, що деякі з засобів, які покращують ситуацію з «і» та «ґ» на локальному Windows-комп’ютері, погіршують(!) ситуацію з
ними на ideone.com, де взагалі-то все гаразд, якщо робити по-простому. Тому, пропонується або взагалі не заморочуватися цим питанням, або
розбиратися досить глибоко, щоб написати код, який працюватиме і на локальному Windows-комп’ютері, і на ideone.com.)*/
using System;

namespace ProjectForLaba4
{
    class SimpleCode
    {
        public static void VayBlock()
        {
            Console.WriteLine("Введіть рядок тексту:");
            string input = Console.ReadLine();

            if (string.IsNullOrWhiteSpace(input))
            {
                Console.WriteLine("Ви не ввели текст.");
                return;
            }

            string output = ReplacePrepositions(input);
            Console.WriteLine("\nВиправлений текст:");
            Console.WriteLine(output);

            Console.WriteLine("\nНатисніть Enter, щоб продовжити...");
            Console.ReadLine();
        }
        static string ReplacePrepositions(string text)
        {
            string[] words = text.Split(' ');
            for (int i = 1; i < words.Length - 1; i++)
            {
                if ((words[i] == "в" || words[i] == "у") &&
                    words[i - 1].Length > 0 && words[i + 1].Length > 0)
                {
                    char lastCharPrev = words[i - 1][^1];
                    char firstCharNext = words[i + 1][0];

                    if (IsConsonant(lastCharPrev) && IsConsonant(firstCharNext) && words[i] == "в")
                    {
                        words[i] = "у";
                    }
                    else if (IsVowel(lastCharPrev) && IsVowel(firstCharNext) && words[i] == "у")
                    {
                        words[i] = "в";
                    }
                }
            }
            return string.Join(" ", words);
        }
        static bool IsConsonant(char c)
        {
            return "бвгґджзйклмнпрстфхцчшщ".Contains(Char.ToLower(c));
        }

        static bool IsVowel(char c)
        {
            return "аеєиіїоуюя".Contains(Char.ToLower(c));
        }
    }
}
